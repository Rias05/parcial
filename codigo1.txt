
// Definición de pines y constantes
#define A 12
#define B 13
#define C 7
#define D 8
#define E 9
#define F 11
#define G 10
#define SUBE 4
#define BAJA 3
#define RESET 5
#define TIMEDISPLAYON 10 // Tiempo de encendido del display en ms
#define UNIDAD A4
#define DECENA A5
#define APAGADO 0

// Variables para el contador y botones
int countDigit = 0;
int sube = 1;
int subePrevia = 1;
int baja = 1;
int bajaPrevia = 1;
int reset = 1;
int resetprevia = 1;

int keypressed(); // Función para detectar botones

void setup()
{
    pinMode(LED_BUILTIN, OUTPUT); // LED incorporado en la placa
    pinMode(3, INPUT_PULLUP);
    pinMode(4, INPUT_PULLUP);
    pinMode(5, INPUT_PULLUP);
    pinMode(7, OUTPUT);
    pinMode(8, OUTPUT);
    pinMode(9, OUTPUT);
    pinMode(10, OUTPUT);
    pinMode(11, OUTPUT);
    pinMode(12, OUTPUT);
    pinMode(13, OUTPUT);
    pinMode(UNIDAD, OUTPUT);
    pinMode(DECENA, OUTPUT);
    digitalWrite(UNIDAD, 0);
    digitalWrite(DECENA, 0);
    printDigit(0);
}

void loop()
{
    int pressed = keypressed();

    if (pressed == SUBE)
    {
        countDigit++;
        if (countDigit > 99)
            countDigit = 0;
    }
    else if (pressed == BAJA)
    {
        countDigit--;
        if (countDigit < 0)
            countDigit = 99;
    }
    else if (pressed == RESET)
    {
        countDigit = 0;
    }

    printCount(countDigit);
}

void printDigit(int digit)
{
    // Apaga todos los segmentos
    digitalWrite(A, LOW);
    digitalWrite(B, LOW);
    digitalWrite(C, LOW);
    digitalWrite(D, LOW);
    digitalWrite(E, LOW);
    digitalWrite(F, LOW);
    digitalWrite(G, LOW);

    // Configuración para mostrar cada dígito
    switch (digit)
    {
        case 0:
            // Configuración para mostrar el número 0
            digitalWrite(A, HIGH);
            digitalWrite(B, HIGH);
            digitalWrite(C, HIGH);
            digitalWrite(D, HIGH);
            digitalWrite(E, HIGH);
            digitalWrite(F, HIGH);
            break;
        case 1:
            // Configuración para mostrar el número 1
            digitalWrite(B, HIGH);
            digitalWrite(C, HIGH);
            break;
        case 2:
            // Configuración para mostrar el número 2
            digitalWrite(A, HIGH);
            digitalWrite(B, HIGH);
            digitalWrite(C, LOW);
            digitalWrite(D, HIGH);
            digitalWrite(E, HIGH);
            digitalWrite(F, LOW);
            digitalWrite(G, HIGH);
            break;
        case 3:
            // Configuración para mostrar el número 3
            digitalWrite(A, HIGH);
            digitalWrite(B, HIGH);
            digitalWrite(C, HIGH);
            digitalWrite(D, HIGH);
            digitalWrite(G, HIGH);
            break;
        case 4:
            // Configuración para mostrar el número 4
            digitalWrite(B, HIGH);
            digitalWrite(C, HIGH);
            digitalWrite(F, HIGH);
            digitalWrite(G, HIGH);
            break;
        case 5:
            // Configuración para mostrar el número 5
            digitalWrite(A, HIGH);
            digitalWrite(B, LOW);
            digitalWrite(C, HIGH);
            digitalWrite(D, HIGH);
            digitalWrite(E, LOW);
            digitalWrite(F, HIGH);
            digitalWrite(G, HIGH);
            break;
        case 6:
            // Configuración para mostrar el número 6
            digitalWrite(A, HIGH);
            digitalWrite(C, HIGH);
            digitalWrite(D, HIGH);
            digitalWrite(E, HIGH);
            digitalWrite(F, HIGH);
            digitalWrite(G, HIGH);
            break;
        case 7:
            // Configuración para mostrar el número 7
            digitalWrite(A, HIGH);
            digitalWrite(B, HIGH);
            digitalWrite(C, HIGH);
            break;
        case 8:
            // Configuración para mostrar el número 8
            digitalWrite(A, HIGH);
            digitalWrite(B, HIGH);
            digitalWrite(C, HIGH);
            digitalWrite(D, HIGH);
            digitalWrite(E, HIGH);
            digitalWrite(F, HIGH);
            digitalWrite(G, HIGH);
            break;
        case 9:
            // Configuración para mostrar el número 9
            digitalWrite(A, HIGH);
            digitalWrite(B, HIGH);
            digitalWrite(C, HIGH);
            digitalWrite(D, HIGH);
            digitalWrite(F, HIGH);
            digitalWrite(G, HIGH);
            break;
    }
}

void predenDigito(int digito)
{
    if (digito == UNIDAD)
    {
        digitalWrite(UNIDAD, LOW); // PONE EL COMÚN DE UNIDAD EN 0 (SE ENCIENDE)
        digitalWrite(DECENA, HIGH); // PONE EL COMÚN DE DECENA EN 1 (NO SE ENCIENDE)
        delay(TIMEDISPLAYON);
    }
    else if (digito == DECENA)
    {
        digitalWrite(UNIDAD, HIGH);
        digitalWrite(DECENA, LOW);
        delay(TIMEDISPLAYON);
    }
    else
    {
        digitalWrite(UNIDAD, HIGH);
        digitalWrite(DECENA, HIGH);
    }
}

void printCount(int count)
{
    predenDigito(APAGADO);

    printDigit(count / 10);
    predenDigito(DECENA);

    predenDigito(APAGADO);
    printDigit(count - 10 * (count / 10));
    predenDigito(UNIDAD);
}

int keypressed(void)
{
    sube = digitalRead(SUBE);
    baja = digitalRead(BAJA);
    reset = digitalRead(RESET);

    if (sube)
        subePrevia = 1;
    if (baja)
        bajaPrevia = 1;
    if (reset)
        resetprevia = 1;

    if (sube == 0 && sube != subePrevia)
    {
        subePrevia = sube;
        return SUBE;
    }
    if (baja == 0 && baja != bajaPrevia)
    {
        bajaPrevia = baja;
        return BAJA;
    }
    if (reset == 0 && reset != resetprevia)
    {
        resetprevia = reset;
        return RESET;
    }
    return 0;
}